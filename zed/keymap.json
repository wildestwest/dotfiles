// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
      "context": "EmptyPane || ProjectPanel || CollabPanel || OutlinePanel || ChatPanel || VimControl || EmptyPane || SharedScreen || MarkdownPreview || KeyContextView || ProjectSearchBar || Editor || Terminal",
      "bindings": {
        "ctrl-w": "pane::CloseActiveItem",
        "ctrl-shift-w": "pane::CloseOtherItems",

        "ctrl-h": "workspace::ActivatePaneLeft",
        "ctrl-l": "workspace::ActivatePaneRight",
        "ctrl-k": "workspace::ActivatePaneUp",
        "ctrl-j": "workspace::ActivatePaneDown",

        "ctrl-space": "workspace::ToggleLeftDock",
        "ctrl-/": "workspace::ToggleRightDock"
      }
    },
  {
    "context": "Editor && vim_mode == normal",
    "bindings": {
      // Harpoon style mark jumping
      "space m a": ["workspace::SendKeystrokes", "m shift-a"],
      "space m e": ["workspace::SendKeystrokes", "m shift-e"],
      "space m i": ["workspace::SendKeystrokes", "m shift-i"],
      "space m c": ["workspace::SendKeystrokes", "m shift-c"],
      "ctrl-a": ["workspace::SendKeystrokes", "` shift-a"],
      "ctrl-e": ["workspace::SendKeystrokes", "` shift-e"],
      "ctrl-i": ["workspace::SendKeystrokes", "` shift-i"],
      "ctrl-c": ["workspace::SendKeystrokes", "` shift-c"],

      // lazygit
      "space l g": [
        "task::Spawn",
        { "task_name": "lazygit", "reveal_target": "center" }
      ],

      "space p": "editor::Format",
      "shift-l": "pane::ActivateNextItem",
      "shift-h": "pane::ActivatePreviousItem",
      "space v": "pane::SplitRight",
      "space w": "workspace::SaveAll",

      // Find/search
      "space space": "file_finder::Toggle",
      "space f p": "projects::OpenRecent",
      "space f r": "projects::OpenRemote",
      "space /": "pane::DeploySearch",
      "space s s": "project_symbols::Toggle",

      "s": "vim::PushSneak",
      "shift-s": "vim::PushSneakBackward"
    }
  },
  {
    "context": "Editor && vim_mode == visual",
    "bindings": {
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp",
      "shift-x": "vim::Exchange"
    }
  },
  {
    "context": "vim_operator == a || vim_operator == i || vim_operator == cs",
    "bindings": {
      // mini.ai plugin behavior
      "q": "vim::MiniQuotes",
      "b": "vim::MiniBrackets"
    }
  }
]
