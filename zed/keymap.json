// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "(EmptyPane || SharedScreen || (Editor && vim_mode == normal) || ProjectPanel )",
    "bindings": {
      "space space": "file_finder::Toggle",
      "space p": "projects::OpenRecent",
      "space r": "projects::OpenRemote",
      "space /": "pane::DeploySearch",
      "space t": "task::Spawn",
      "space e": "toolchain::Select",
      "space l g": [
        "task::Spawn",
        { "task_name": "lazygit", "reveal_target": "center" }
      ]
    }
  },
  {
      "context": "(Terminal || EmptyPane || SharedScreen || (Editor && vim_mode == normal) || ProjectPanel )",
      "bindings": {
        // No leader key bindings in the terminal cuz it makes typing laggy
        "ctrl-'": "workspace::ToggleLeftDock"
      }
    },
  {
    "context": "(Editor || Workspace)",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Editor && vim_mode == normal",
    "bindings": {
      // Harpoon style mark jumping
      "ctrl-shift-a": ["workspace::SendKeystrokes", "m shift-a"],
      "ctrl-shift-e": ["workspace::SendKeystrokes", "m shift-e"],
      "ctrl-shift-i": ["workspace::SendKeystrokes", "m shift-i"],
      "ctrl-shift-c": ["workspace::SendKeystrokes", "m shift-c"],
      "ctrl-a": ["workspace::SendKeystrokes", "` shift-a"],
      "ctrl-e": ["workspace::SendKeystrokes", "` shift-e"],
      "ctrl-i": ["workspace::SendKeystrokes", "` shift-i"],
      "ctrl-c": ["workspace::SendKeystrokes", "` shift-c"],

      "s": "vim::PushSneak",
      "shift-s": "vim::PushSneakBackward"
    }
  },
  {
    "context": "Editor && vim_mode == visual",
    "bindings": {
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp",
      "shift-x": "vim::Exchange"
    }
  },
  {
    "context": "vim_operator == a || vim_operator == i || vim_operator == cs",
    "bindings": {
      // mini.ai plugin behavior
      "q": "vim::MiniQuotes",
      "b": "vim::MiniBrackets"
    }
  },
  {
    "context": "multibuffer",
    "bindings": {
      // why is this not a default???
      "n": "search::SelectNextMatch",
      "shift-n": "search::SelectPreviousMatch"
    }
  },
  {
    "context": "(FileFinder || FileFinder > Picker > Editor)",
    "bindings": {
      "ctrl-v": "pane::SplitRight"
    }
  }
]
